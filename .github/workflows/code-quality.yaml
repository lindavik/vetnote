name: Code Quality Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  setup:
    name: Set up Python and Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
        env:
          PATH: "${{ runner.tool_cache }}/python/bin:${{ env.PATH }}"

      - name: Install Dependencies
        run: poetry install --with dev

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Linter (flake8)
        run: poetry run flake8 vetnote tests
        env:
          PATH: "${{ runner.tool_cache }}/python/bin:${{ env.PATH }}"

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Type Checking (mypy)
        run: poetry run mypy vetnote
        env:
          PATH: "${{ runner.tool_cache }}/python/bin:${{ env.PATH }}"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Tests
        run: poetry run pytest --cov=vetnote tests
        env:
          PATH: "${{ runner.tool_cache }}/python/bin:${{ env.PATH }}"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Security Scan (Bandit)
        run: poetry run bandit -r vetnote
        env:
          PATH: "${{ runner.tool_cache }}/python/bin:${{ env.PATH }}"